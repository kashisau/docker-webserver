# Deny bots that are troublesome.
map $http_user_agent $limit_bots {
     default 0;
     ~*(AhrefsBot|Baiduspider|PaperLiBot) 1;
 }

# Promote HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name .kashis.com.au;
    return 301 https://kashis.com.au$request_uri;
}

# Cannonical domain rewrite to remove www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name *.kashis.com.au;
    return 301 https://kashis.com.au$request_uri;
}

# Primary virtual host server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name kashis.com.au;
    root "/var/www/default";
    index index.html index.htm;
    ssi on;

    # Ban certain bots from crawling the site
    if ($limit_bots = 1) {
        return 403;
    }

    # 301 Redirect URLs with trailing /'s as per https://webmasters.googleblog.com/2010/04/to-slash-or-not-to-slash.html
    rewrite ^/(.*)/$ /$1 permanent;

    # Change // -> / for all URLs, so it works for our php location block, too
    merge_slashes off;
    rewrite (.*)//+(.*) $1/$2 permanent;

    # For WordPress bots/users
    location ~ ^/(wp-login|wp-admin|wp-config|wp-content|wp-includes|(.*)\.exe) {
        return 301 https://wordpress.com/wp-login.php;
    }

    # Handle Do Not Track as per https://www.eff.org/dnt-policy
    location /.well-known/dnt-policy.txt {
        try_files /dnt-policy.txt =404;
    }

    # Access and error logging
    # access_log /dev/stdout;
    # error_log  /dev/stdout error;

    # Root directory location handler
    location / {
        try_files $uri/index.html $uri $uri/ =404;
    }

    # Disable reading of Apache .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Misc settings
    sendfile off;
    client_max_body_size 20k;
}
